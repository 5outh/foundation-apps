/*
  BLOCK LIST
  ----------

  A generic list component that can accomodate a variety of styles and controls.

  Features:
   - Icons
   - Labels
   - Chevrons
   - Text fields
   - Dropdown menus
   - Checkbox/radio inputs
*/

$blocklist-background: #fff !default;
$blocklist-fullbleed: true !default;
$blocklist-fontsize: 1rem !default;

$blocklist-item-padding: 0.8rem 1rem !default;
$blocklist-item-color: isitlight($blocklist-background, #000, #fff) !default;
$blocklist-item-background-hover: smartscale($blocklist-background, 4.5%) !default;
$blocklist-item-color-disabled: #999 !default;
$blocklist-item-border: 1px solid smartscale($blocklist-background, 18.5%) !default;

$blocklist-item-label-color: scale-color($blocklist-item-color, $lightness: 60%) !default;
$blocklist-item-icon-size: 0.8 !default;

$blocklist-header-fontsize: 0.8em !default;
$blocklist-header-color: smartscale($blocklist-item-color, 40%) !default;

// Container
%block-list {
  // Internal settings
  $item-height: 
    $blocklist-fontsize
    + get-side($blocklist-item-padding, top)
    + get-side($blocklist-item-padding, top);

  margin-bottom: 1rem;
  font-size: $blocklist-fontsize;
  line-height: 1;
  user-select: none;

  @if $blocklist-fullbleed {
    margin-left: -1rem;
    margin-right: -1rem;
  }

  // Title of list (optional)
  header {
    margin-top: 1em;
    text-transform: uppercase;
    color: $blocklist-header-color;
    font-weight: bold;
    margin-bottom: 0.5em;
    margin-left: get-side($blocklist-item-padding, left);
    font-size: $blocklist-header-fontsize;
    cursor: default;
  }
  // List container
  ul {
    list-style-type: none;
    margin-left: 0;
  }
  // List item
  li {
    position: relative;

    @if hasvalue($blocklist-item-border) {
      border-bottom: $blocklist-item-border;
      &:first-child {
        border-top: $blocklist-item-border;
      }
    }

    // Inner elements share the same basic styles
    > a, > span, > label {
      display: block;
      padding: $blocklist-item-padding;
      padding-left: get-side($blocklist-item-padding, left);
      color: $blocklist-item-color;
      line-height: 1;
    }
    > a, > label {
      cursor: pointer;

      &:hover {
        color: $blocklist-item-color;
        background: $blocklist-item-background-hover;
      }
    }
  }

  // Coloring classes
  li.caution > a {
    &, &:hover { color: $alert-color; }
  }
  li.disabled > a {
    cursor: default;
    &, &:hover { color: $blocklist-item-color-disabled; }
    &:hover { background: transparent; }
  }

  // Labels
  .label {
    display: inline-block;
    float: right;
    padding: 0;
    color: $blocklist-item-label-color;
    pointer-events: none;

    &.left {
      margin-left: get-side($blocklist-item-padding, top);
      float: none;
    }
  }

  // Multiple select
  input[type="checkbox"], input[type="radio"] {
    position: absolute;
    left: -9999px;

    &:checked + label {
      &::after {
        content: 'Hell yeah';
        color: $primary-color;
        float: right;
        pointer-events: none;
      }
    }
  }

  // Text fields
  input[type="text"], input[type="password"] {
    margin: 0;
    border: 0;
    line-height: 1;
    height: auto;
    padding: $blocklist-item-padding;
    color: $blocklist-item-color;
  }

  
}

/*
  Adds support for chevrons, which appear on the right-hand side of the item.
*/
@mixin block-list-chevron {
  // PH - need a better solution
  $item-height: 
    $blocklist-fontsize
    + get-side($blocklist-item-padding, top)
    + get-side($blocklist-item-padding, top);

  // Chevrons are a pseudo-element
  &::after {
    content: '\203A';
    display: block;
    position: absolute;
    right: get-side($blocklist-item-padding, right);
    top: 0;
    line-height: $item-height;
    font-weight: bold;
    color: $blocklist-header-color;
    font-size: 2em;
  }

  // Labels next to links move over to make room for the chevron
  .label {
    padding-right: get-side($blocklist-item-padding, right) * 1.5;
  }
}

/*
  Adds icon styles. Call this mixin on a block list container.

  $size - size of the icon as a percentage (decimal) of the list item's height.
  $item-selector - overrides the 'li' selector used for list items.
*/
@mixin block-list-icons(
  $size: $blocklist-item-icon-size,
  $item-selector: 'li'
) {
  // PH - need a better solution
  $item-height: 
    $blocklist-fontsize
    + get-side($blocklist-item-padding, top)
    + get-side($blocklist-item-padding, top);

  $icon-height: $item-height * $blocklist-item-icon-size;
  $icon-offset: ($item-height - $icon-height) / 2;

  #{$item-selector} {
    > a, > span, > label {
      padding-left: (get-side($blocklist-item-padding, left) * 2) + $blocklist-item-icon-size;
    }
    img {
      position: absolute;
      top: $icon-offset;
      left: $icon-offset;
      width: $icon-height;
      height: $icon-height;
      border-radius: 8px;
      pointer-events: none;
    }
  }
}

// Adds support for dropdowns in list items
@mixin block-list-dropdown {
  // Adds a dropdown triangle to the select menu
  // The <select> tag doesn't support pseudo-elements
  &::after {
    @include css-triangle(5px, $blocklist-item-color, top);
    position: absolute;
    top: 50%;
    margin-top: -3px;
    right: get-side($blocklist-item-padding, right);
  }
  select {
    -webkit-appearance: none;
    outline: 0;
    background: 0;
    border: 0;
    height: auto;
    padding: $blocklist-item-padding;
    font-size: $blocklist-fontsize;
    line-height: 1;
    color: $blocklist-item-color;
    background: transparent;

    &:hover {
      background: $blocklist-item-background-hover;
    }
  }
}

@mixin block-list {
  @extend %block-list;

  li {
    &.with-chevron { @include block-list-chevron; }
    &.with-dropdown { @include block-list-dropdown; }
  }
  &.with-icons { @include block-list-icons; }
}

/*
  CSS Output
*/

.block-list {
  @include block-list;
}