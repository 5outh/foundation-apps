@include foundation-component(button, (
  padding: 0.85em 1em,
  margin: 0 1em 1em 0,

  background: $primary-color,
  color: #fff,
  radius: 8px,

  font-size: 0.9rem,
  font-weight: 500,

  small-scale: 0.8,
  large-scale: 1.2,

  disabled-opacity: 0.8,
));

%button {
  border: 0;
  text-align: center;
  line-height: 1;
  cursor: pointer;
  -webkit-appearance: none;
  -webkit-font-smoothing: antialiased;

  display: foundation(button, display);
  padding: foundation(button, padding);
  margin: foundation(button, margin);
  font-weight: foundation(button, font-weight);
  border-radius: foundation(button, radius);

  transition: background 0.25s ease-out;

  // Dropdown arrow
  &[data-popup-toggle], &[data-popover-toggle] {
    position: relative;
    padding-right: 2em; // Placeholder

    &::after {
      @include css-triangle(6px, foundation(button, color), top);
      position: absolute;
      right: 0.7em;
      top: 50%;
      margin-top: -3px;
    }
  }

  &-disabled {
    opacity: foundation(button, disabled-opacity);
    pointer-events: none;
  }
}

@mixin button-size($size: medium) {
  $sizes: (
    small:  foundation(button, font-size) * foundation(button, small-scale),
    medium: foundation(button, font-size),
    large:  foundation(button, font-size) * foundation(button, large-scale),
  );
  font-size: map-get($sizes, $size);
}
@mixin button-expand($expand: true) {
  @if $expand {
    display: block;
    margin-left: 0;
    margin-right: 0;
  }
  @else {
    display: inline-block;
    margin: foundation(button, margin);
  }
}
@mixin button-style($background: foundation(button, background), $color: foundation(button, color)) {
  $color: if(lightness($background) > 60%, #000, #fff);

  background: $background;
  color: $color;

  &:hover {
    background: scale-color($background, $lightness: -15%);
    color: $color;
  }
}
@mixin button-disabled($background: foundation(button, background), $base: true) {
  @if not $base {
    @extend %button-disabled;
  }
  &, &:hover {
    background: $background;
  }
}
@mixin button($size: medium, $expand: false, $background: foundation(button, background), $color: foundation(button, color)) {
  @extend %button;
  @include button-size($size);
  @include button-expand($expand);
  @include button-style($background, $color);
}

/*
  CSS Output
*/

.button {
  @include button;

  &.small  { @include button-size(small); }
  &.large  { @include button-size(large); }
  &.expand { @include button-expand; }

  &.secondary { @include button-style($secondary-color) }
  &.success   { @include button-style($success-color) }
  &.warning   { @include button-style($warning-color) }
  &.alert     { @include button-style($alert-color) }

  &.disabled { @include button-disabled;
    &.secondary { @include button-disabled($secondary-color, false) }
    &.success   { @include button-disabled($success-color, false) }
    &.warning   { @include button-disabled($warning-color, false) }
    &.alert     { @include button-disabled($alert-color, false) }
  }
}
