/*
  PANEL
  -----

  The friendly panel is an all-purpose container for hiding content off-screen.

  Features:
   - Position at top, right, bottom, or left
   - Anchor to grid block or window
   - Define max width or height
   - Transform into grid block depending on screen size
*/

@mixin panel-base() {
  display: block;
  position: absolute;
  z-index: 100;
  overflow-y: auto;
}

@mixin panel-layout(
  $position: left,
  $size: 300px
) {
  /*
    Direction
  */
  @if $position == top {
    top: 0;
    left: 0;
    width: 100%;
    transform: translateY(-100%);

    &.is-active {
      transform: translateY(0%);
    }
  }
  @else if $position == right {
    top: 0;
    right: 0;
    height: 100%;
    transform: translateX(100%);

    &.is-active {
      transform: translateX(0%);
    }
  }
  @else if $position == bottom {
    bottom: 0;
    left: 0;
    width: 100%;
    transform: translateY(100%);

    &.is-active {
      transform: translateY(0%);
    }
  }
  @else if $position == left {
    top: 0;
    left: 0;
    height: 100%;
    transform: translateX(-100%);

    &.is-active {
      transform: translateX(0%);
    }
  }

  /*
    Sizing
  */
  // Horizontal panels are always all the way tall and have a set width
  @if $position == left or $position == right {
    width: 100%;
    @media screen and (min-width: rem-calc($size)) {
      width: $size;
    }
  }
  // (For now) vertical panels are as big as they need to be
  @if $position == top or $position == bottom {
    height: $size;
  }
}

@mixin panel-style(
  $padding: $global-padding,
  $background: #fff,
  $shadow-distance: 3px,
  $shadow-size: 10px,
  $shadow-color: rgba(black, 0.25),
  $animation-speed: 0.25s
) {
  /*
    Basic styles
  */
  padding: $padding;
  background: $background;

  /*
    Shadows
  */
  // &.is-active {
  //   @if $direction == left        { box-shadow: $shadow-distance 0 $shadow-size $shadow-color; }
  //   @else if $direction == right  { box-shadow: -$shadow-distance 0 $shadow-size $shadow-color; }
  //   @else if $direction == top    { box-shadow: 0 $shadow-distance $shadow-size $shadow-color; }
  //   @else if $direction == bottom { box-shadow: 0 -$shadow-distance $shadow-size $shadow-color; }
  // }

  /*
    Animation
  */
  transition: transform $animation-speed linear;
}

/*
  CSS output
*/

.panel {
  @include panel-base;
  @include panel-style;
}

// .medium-panel {
//   #{$medium} { @include panel-base; }
// }
// .large-panel {
//   #{$large} { @include panel-base; }
// }

.panel-top    { @include panel-layout(top); }
.panel-right  { @include panel-layout(right); }
.panel-bottom { @include panel-layout(bottom); }
.panel-left   { @include panel-layout(left); }

.panel-fixed  { position: fixed; }
