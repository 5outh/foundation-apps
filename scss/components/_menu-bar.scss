/*
  MENU BAR
  --------

  A generic, flexible menu component.

  Features:
   - Orient horizontally and vertically
     - Change orientation at certain breakpoints
   - Items with icons above, below, or to the left or right
   - Text labels for vertical menus and badges for horizontal menus
*/

$menubar-fontsize: 1rem !default;
$menubar-background: #fff !default;
$menubar-background-hover: smartscale($menubar-background, 7%) !default;
$menubar-color: isitlight($menubar-background) !default;
$menubar-color-hover: isitlight($menubar-background) !default;

$menubar-item-padding: $global-padding !default;
$menubar-icon-size: 25px !default;
$menubar-icon-spacing: $menubar-item-padding !default;

// Menu bar container
%menu-bar {
  display: flex;
  align-items: stretch;
  margin: 0;
  list-style-type: none;
  margin-bottom: 1rem;

  // Menu item
  li {
    // This flex setting makes each item an equal width
    flex: 1;
    align-items: center;

    // Link inside menu item
    a {
      display: flex;
      flex-flow: column nowrap;
      align-items: center;
      padding: $menubar-item-padding;
      font-size: $menubar-fontsize;
      line-height: 1;
    }
  }
}

@mixin menu-bar-layout (
  $orientation: horizontal,
  $stretch: true
) {
  /*
    Orientation
  */
  @if $orientation == horizontal {
    flex-flow: row nowrap;
    a {
      flex-flow: column nowrap;
    }
  }
  @else {
    flex-flow: column nowrap;
    a {
      flex-flow: row nowrap;
    }
  }

  /*
    Stretch
  */
  li {
    @if $stretch == false {
      flex: 0 0 auto;
    }
  }
}

@mixin menu-bar-style(
  $background: $menubar-background,
  $background-hover: $menubar-background-hover,
  $color: $menubar-color,
  $color-hover: $menubar-color-hover
) {
  // Container
  background: $background;
  color: $color;

  // Items
  a {
    @if $color == auto {
      color: isitlight($background, $primary-color, #fff);
    }
    @else {
      color: $color;
    }

    &:hover {
      background: $background-hover;
      color: $color-hover;
    }
  }
}

@mixin menu-bar-icons(
  $position: left,
  $size: $menubar-icon-size
) {
  li {
    // Sizing
    img {
      margin: 0;
      @if $menubar-icon-size != false {
        width: $menubar-icon-size;
        height: $menubar-icon-size;
      }
    }

    // Position
    @if $position == left {
      a {
        flex-flow: row nowrap;
        align-items: center;
        img { margin-right: $menubar-icon-spacing; }
      }
    }
    @else {
      a {
        img { margin-right: 0; }
      }
    }
    @if $position == top {
      a {
        flex-flow: column nowrap;
        img { margin-bottom: $menubar-icon-spacing; }
      }
    }
    @if $position == right {
      a {
        flex-flow: row-reverse nowrap;
        img { margin-left: $menubar-icon-spacing; }
      }
    }
    @if $position == bottom {
      a {
        flex-flow: column-reverse nowrap;
        img { margin-top: $menubar-icon-spacing; }
      }
    }
  }
}

/*
  Mixins
*/
@mixin menu-bar() {
  @extend %menu-bar;
  @include menu-bar-layout;
  @include menu-bar-icons;
  @include menu-bar-style;
}

/*
  CSS output
*/
.menu-bar {
  @extend %menu-bar;
  @include menu-bar-style;

  // Positioning
  &, &.horizontal  { @include menu-bar-layout(horizontal); }
  &.vertical       { @include menu-bar-layout(vertical); }

  // Condensed bar
  &.condense {
    &, &.horizontal { @include menu-bar-layout(horizontal, false); }
    &.vertical      { @include menu-bar-layout(horizontal, false); }
  }

  // Responsive positioning
  @each $size in $breakpoint-classes {
    @include breakpoint($size) {
      &.#{$size}-horizontal {
        @include menu-bar-layout(horizontal);
      }
      &.#{$size}-vertical {
        @include menu-bar-layout(vertical);
      }
    }
  }

  // Icon positioning
  &, &.icon-top { @include menu-bar-icons(top); }
  &.icon-right  { @include menu-bar-icons(right); }
  &.icon-bottom { @include menu-bar-icons(bottom); }
  &.icon-left   { @include menu-bar-icons(left); }
  @each $size in $breakpoint-classes {
    @each $pos in (top, right, bottom, left) {
      .#{$size}-icon-#{$pos} { @include menu-bar-icons($pos); }
    }
  }

  // Coloring
  &.primary {
    @include menu-bar-style(
      $primary-color,
      smartscale($primary-color, 10%),
      isitlight($primary-color),
      isitlight($primary-color)
    );
  }
  &.dark {
    @include menu-bar-style(
      $dark-color,
      $primary-color,
      #fff,
      #fff
    );
  }
}
