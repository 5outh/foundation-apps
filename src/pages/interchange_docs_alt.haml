%header#docs
  .docs.container
    .group
      .block
        %h1
          %small Foundation for Apps
          <br>
          Interchange Web Component

%main.container
  %section
    - # Below is not a typo, divs are explicitly done unless I specified otherwise.
    .group
      .block
        %h3{ aria: { level: 2 } } Welcome!

      .block
        :markdown
          These are the docs for the alpha version of **Foundation for Apps Interchange
          Web Component**.

          The goal here is to allow you to quickly switch out content based
          on the dimensions of the element it's supposed to be in or the size of the
          screen.
        %hr.clearing

  - # Note I could have kept going with just one group, but something tells me that's going to backfire for me semantically/for SEO.:
  %section.group
    .medium-6.block
      %h4{ aria: { level: 3  } } The Markup
      :markdown
        Interchange, whether as an web component or an angular directive, is declared on your
        web page as `<foundation-interchange>`, with a `scenarios` attribute being
        necessary for it to know what contexts to take account throughout its use in
        your app application.

    .medium-6.group
      %h6 Building blocks of an Interchange Element
      %p
        Every instance of foundation-interchange should have a `scenarios` attribute
        with a list of scenarios to use.
      %h6#markup{ aria: { level: 4 } } Markup
      :preserve
        {{#markdown}}
          ```html

            <foundation-interchange scenarios="[["small.html", min-width: 400px], ["medium.html", min-width: 800px], ["large.html", min-width: 900px]]"></foundation-interchange>

          ```
        {{/markdown}}
  %section.group
    .medium-12.block
      %h4{ aria: { level: 2 } } Scenarios
      :markdown
        Scenarios are the number of contexts you want to be considered by `Interchange`
        to be displayed to an end user of your site. Such scenarios are surrounded by
        square brackets.

        To set up a valid list of scenarios, you must passed in a scenario consisting of
        a `path`, and a `query`.

  %section.group
    .medium-6.block
      %h5{ aria: { level: 3 } } Paths
      :markdown

        The `path` parameter associated with a single scenario accepts all the typical HTML URLs you can use in a
        HTML5 web application.

        Accordingly, it inherits all the restrictions of a regular path to a resource on the web, including conforming to the Cross-Origin Resource Sharing protocol.
    .medium-6.block
      %h6{ aria: { level: 4 } } Cross-Origin Resource Sharing
      %p
        If you decide to use paths outside of your side, you must
        make sure the site you linking content from  allows for resources from its site
        can be use in such a way. <!-- Link to more information about cross-origin
        resources -->
    .medium-6.block
  %section.group
    .medium-6.block
      %h5{ aria: { level: 3 } } Media Queries
      :markdown
        By default, all traditional Media Queries CSS3 media queries can be passed into the `query` parameter.

        For more information about media queries on a the web, [read this Mozilla
        Developer Article](http::/mdn.org)

    .medium-6.block
      %h6{ aria: { level: 3 } } Markup
      :markdown
        ```html
          Pending code
        ```

    %hr.clearing

  %section.group
    .medium-12.block
      %h4{ aria: { level: 2 } } Advanced
      :markdown

    .medium-6.block
      %h5{ aria: { level: 3  } } Chaining multiple queries
      :markdown
        To chain multiple *element* queries together, they must be encapsulated by square
        brackets.

    .medium-6.block
      :markdown
        ```html
          <foundation-interchange scenarios="[["partial1.html",
        [min-width:500px][min-height:720px]]]"></foundation-interchange>
        ```
