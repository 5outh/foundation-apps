// Grid Variables


.frame {
	margin: 0;
	height: 100vh;
	display: flex;
	flex-flow: row nowrap; 
	overflow: hidden;
	position: relative;

	&.vertical, &.small-vertical { 
		flex-flow: column nowrap; 
	}

	&.horizontal, &.small-horizontal { 
		flex-flow: row nowrap;
	}
	
	@media #{$medium-up} {
		&.medium-vertical { flex-flow: column nowrap; }
		&.medium-horizontal { flex-flow: row nowrap; }
	}
	@media #{$large-up} {
		&.large-vertical { flex-flow: column nowrap; }
		&.large-horizontal { flex-flow: row nowrap; }
	}

}

.block, .group {
	transition: all 300ms ease;
	// border: 1px solid $secondary-color;
	backface-visibility: hidden;

	@for $i from 0 through $total-columns {
	  &.small-order-#{$i} {
	    order: $i;
	  }
	}

	@media #{$medium-up} {
    @for $i from 0 through $total-columns {
		  &.medium-order-#{$i} {
		    order: $i;
		  }
		}
  }

  @media #{$large-up} {
    @for $i from 0 through $total-columns {
		  &.large-order-#{$i} {
		    order: $i;
		  }
		}
  }
}

@mixin block {
	flex: 1 1 auto;
	padding: 1rem;
	position: relative;
	top: auto;
	right: auto;
	bottom: auto;
	left: auto;
	transform: none !important;
	overflow: hidden;
	width: auto !important;
	height: auto !important;
	z-index: auto !important;

	&.scrollable {
		overflow: scroll;
	}
  &.collapse {
  	padding: 0;
  }

	@for $i from 0 through $total-columns {
	  &.small-#{$i} {
	    flex: 0 0 auto;
	    flex-basis: percentage($i / $total-columns);
	  }
	}

  @media #{$medium-up} {
    @for $i from 0 through $total-columns {
		  &.medium-#{$i} {
		    flex: 0 0 auto;
		    flex-basis: percentage($i / $total-columns);
		  }
		}
  }

  @media #{$large-up} {
    @for $i from 0 through $total-columns {
		  &.large-#{$i} {
		    flex: 0 0 auto;
		    flex-basis: percentage($i / $total-columns);
		  }
		}
  }
}

.group {
	flex: 1 1 auto;
	position: relative;
	display: flex;
	flex-flow: row wrap;
	padding: 0;
	overflow: hidden;

	// border: 1px solid #eee;

	&.centered {
		margin-left: auto;
		margin-right: auto;
	}

	@for $i from 0 through $total-columns {
	  &.small-#{$i} {
	    flex: 0 0 auto;
	    flex-basis: percentage($i / $total-columns);
	  }
	}

	@media #{$medium-up} {
    @for $i from 0 through $total-columns {
		  &.medium-#{$i} {
		    flex: 0 0 auto;
		    flex-basis: percentage($i / $total-columns);
		  }
		}
  }

  @media #{$large-up} {
    @for $i from 0 through $total-columns {
		  &.large-#{$i} {
		    flex: 0 0 auto;
		    flex-basis: percentage($i / $total-columns);
		  }
		}
  }

	&.scrollable { overflow-x: scroll; flex-flow: row nowrap; -webkit-overflow-scrolling: touch; }
	&.scrollable-vertical { overflow-y: scroll; flex-flow: row wrap; height: 100%; -webkit-overflow-scrolling: touch; 
		&>.block:not([class*="small-"]) { flex-basis: 100%; }
	}

	&.vertical, &.small-vertical { flex-flow: column wrap; height: 100%; 
		&.scrollable, &.small-scrollable { overflow-y: scroll; flex-flow: column nowrap; }
		&.scrollable-vertical, &.small-scrollable-vertical { overflow-x: scroll; flex-flow: column wrap; }
	}

	@media #{$medium-up} {
		&.medium-scrollable { overflow-x: scroll; flex-flow: row nowrap; }
		&.medium-scrollable-vertical { overflow-y: scroll; flex-flow: row wrap; height: 100%; 
			&>.block:not([class*="small-"]) { flex-basis: 100%; }
		}

		&.medium-vertical { flex-flow: column wrap; height: 100%; 
			&.scrollable { overflow-y: scroll; flex-flow: column nowrap; }
			&.scrollable-vertical { overflow-x: scroll; flex-flow: column wrap; }
		}
	}

	@media #{$large-up} {
		&.large-scrollable { overflow-x: scroll; flex-flow: row nowrap; }
		&.large-scrollable-vertical { overflow-y: scroll; flex-flow: row wrap; height: 100%; 
			&>.block:not([class*="small-"]) { flex-basis: 100%; }
		}

		&.large-vertical { flex-flow: column wrap; height: 100%; 
			&.scrollable { overflow-y: scroll; flex-flow: column nowrap; }
			&.scrollable-vertical { overflow-x: scroll; flex-flow: column wrap; }
		}
	}

	@media #{$medium-up} {
		&.medium-vertical { flex-flow: column nowrap; }
		&.medium-horizontal { flex-flow: row nowrap; height: auto; }
	}
	@media #{$large-up} {
		&.large-vertical { flex-flow: column nowrap; }
		&.large-horizontal { flex-flow: row nowrap; height: auto; }
	}
}

.vertical, .small-vertical, .medium-vertical, .large-vertical {

	.block { height: auto; }

	@for $i from 0 through $total-columns {
	  &>.small-#{$i} {
	    height: percentage($i / $total-columns);
	  }
	}

	@media #{$medium-up} {
    @for $i from 0 through $total-columns {
		  &>.medium-#{$i} {
		    height: percentage($i / $total-columns);
		  }
		}
  }

  @media #{$large-up} {
    @for $i from 0 through $total-columns {
		  &>.large-#{$i} {
		    height: percentage($i / $total-columns);
		  }
		}
  }
}

.collapsed.block,
.group.collapsed > .block {
		padding: 0;
}

.container {
	max-width: 1000px;
	margin: 0 auto;
}

img { max-width: 100%; }

// Off-canvas panel

@mixin off-canvas-base() {
	display: block;
	position: absolute;
	transition: transform 0.5s linear;
	z-index: 100;
	overflow-y: scroll;
}
@mixin off-canvas-position($direction: left, $size: 300px) {
	@if $direction == left {
		top: 0;
		left: 0;
		height: 100%;
		transform: translateX(-100%);

		&.is-active {
			transform: translateX(0%);
		}
	}
	@else if $direction == top {
		top: 0;
		left: 0;
		width: 100%;
		transform: translateY(-100%);

		&.is-active {
			transform: translateY(0%);
		}
	}

	@if $direction == left or $direction == right {
		width: 100%;
		@media screen and (min-width: rem-calc($size)) {
			width: $size;
		}
	}
	@if $direction == top or $direction == bottom {
		height: 100%;
		@media screen and (min-height: rem-calc($size)) {
			height: $size;
		}
	}
}

@mixin off-canvas($direction: left, $size: 300px) {
	@include off-canvas-base;
	@include off-canvas-position($direction, $size);
}

.off-canvas {
	@include off-canvas-base;

	&.left {
		@include off-canvas-position(left);
	}
	&.top {
		@include off-canvas-position(top);
	}
}

.block, .small-block {
	@include block;
}
@media #{$medium-up} {
	.medium-block {
		@include block;
	}
}
@media #{$large-up} {
	.large-block {
		@include block;
	}
}