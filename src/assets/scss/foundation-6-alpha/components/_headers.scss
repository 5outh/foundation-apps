// Headers are fixed top/bottom/left/right elements that work with the grid

// Header Variables

$fixed-top: 80px !default;
$fixed-bottom: false !default;
$fixed-left: 80px !default;
$fixed-right: false !default;


.group, .block {
	&[class*="fixed-"] { flex: 0 0 auto; }
	
	@if ($fixed-left) {
	  &.fixed-left {
	  	width: $fixed-left; flex-basis: $fixed-left;
	  }
	}
	@if ($fixed-right) {
	  &.fixed-right {
	  	width: $fixed-right; flex-basis: $fixed-right;
	  }
	}

	@if ($fixed-left) {
		@if ($fixed-right) {
			&.remainder { width: calc(100vw - #{$fixed-left} - #{$fixed-right}); }
		} @else {
			&.remainder { width: calc(100vw - #{$fixed-left}); }
		}
	} @else { 
		@if ($fixed-right) {
			&.remainder { width: calc(100vw - #{$fixed-right}); }
		}
	}
}


.vertical, .small-vertical, .medium-vertical, .large-vertical {

	.group, .block {
		
		@if ($fixed-top) {
		  &.fixed-top {
		  	height: $fixed-top; flex-basis: $fixed-top;
		  }
		}
		@if ($fixed-bottom) {
		  &.fixed-bottom {
		  	height: $fixed-bottom; flex-basis: $fixed-bottom;
		  }
		}

		@if ($fixed-top) {
			@if ($fixed-bottom) {
				&.remainder { height: calc(100vh - #{$fixed-top} - #{$fixed-bottom}); }
			} @else {
				&.remainder { height: calc(100vh - #{$fixed-top}); }
			}
		} @else { 
			@if ($fixed-bottom) {
				&.remainder { height: calc(100vh - #{$fixed-bottom}); }
			}
		}
	}

	&>.remainder { width: 100%; }

}

.menu-bar {
	$height: 60px;
	display: flex;
	flex: 0 0 auto;
	justify-content: flex-start;
	align-items: center;
	background: #eee !important;
	border-bottom: 1px solid #ccc;

	&.menu-bar-bottom {
		border-bottom: 0;
		border-top: 1px solid #ccc;
	}

	.title {
		font-weight: bold;
	}

	.left, .center, .right {
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	.left {
		order: 1;
		flex: 0 0 25%;
	}
	.center {
		order: 2;
		flex: 0 0 50%;
		text-align: center;
	}
	.right {
		order: 3;
		flex: 0 0 25%;
		text-align: right;
	}

	.left:first-child {
		flex: 1 1 auto;
	}
	.left:first-child + .right:last-child {
		flex: 1 1 auto;
	}
}